/* This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
package edu.ku.brc.specify.datamodel;

import java.util.Calendar;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * 
 * 
 * @author <!-- Dev -->
 *
 * @code_status Alpha
 *
 * Created Date: <!-- Date -->
 *
 */
@Entity
@org.hibernate.annotations.Entity(dynamicInsert=true, dynamicUpdate=true)
@org.hibernate.annotations.Proxy(lazy = false)
@Table(name = "<!-- TableName -->")
public class <!-- ClassName --> extends DataModelObjBase implements java.io.Serializable
{
    // Fields    
<!-- Fields -->

    // Constructors

    /** default constructor */
    public <!-- ClassName -->()
    {
        //
    }

    /** constructor with id */
    public <!-- ClassName -->(Integer <!-- Id -->)
    {
        this.<!-- Id --> = <!-- Id -->;
    }

    // Initializer
    @Override
    public void initialize()
    {
        super.init();
<!-- Initers -->
    }

    // End Initializer

    // Property accessors

    /**
     * 
     */
    @Id
    @GeneratedValue
    @Column(name = "<!-- ClassName -->ID", unique = false, nullable = false, insertable = true, updatable = true)
    public Integer getConservEventId()
    {
        return this.<!-- Id -->;
    }

    public void set<!-- ClassName -->Id(Integer <!-- Id -->)
    {
        this.<!-- Id --> = <!-- Id -->;
    }

<!-- Methods -->
    
    /**
     * Generic Getter for the ID Property.
     * @returns ID Property.
     */
    @Transient
    @Override
    public Integer getId()
    {
        return this.<!-- Id -->;
    }

    /* (non-Javadoc)
     * @see edu.ku.brc.ui.forms.FormDataObjIFace#getDataClass()
     */
    @Transient
    @Override
    public Class<?> getDataClass()
    {
        return <!-- ClassName -->.class;
    }

    /* (non-Javadoc)
     * @see edu.ku.brc.ui.forms.FormDataObjIFace#getTableId()
     */
    @Override
    @Transient
    public int getTableId()
    {
        return getClassTableId();
    }
    
    /**
     * @return the Table ID for the class.
     */
    public static int getClassTableId()
    {
        return <!-- IdNum -->;
    }

}
