<?xml version="1.0"?>
<project name="Specify 6.0 Build File" basedir=".">

	<!-- Set up properties containing important project directories -->
	
	<property name="source.root" value="src"/>
	
	<property name="compile.src.root" value="compile-src"/>
	<property name="compile.dst.root" value="compile-dst"/>
	
	<property name="asa.dir" value="edu/harvard/huh/asa"/>
	<property name="asa2specify.dir" value="edu/harvard/huh/asa2specify"/>
	<property name="huh.utilapps.dir" value="edu/harvard/huh/specify/utilapps"/>
	<property name="huh.config.init.dir" value="edu/harvard/huh/specify/config/init"/>
	
	<property name="class.root" value="compile-dst" />
	
	<property name="installer.dir" value="InstallerFiles"/>
	<property name="media.dir" value="Media"/>
	<property name="rel.images.path" value="edu/ku/brc/specify/images"/>
	<property name="alt.help.img.dir" value="help/images"/>
		
	<property name="config.dir" value="config"/>
	<property name="help.dir" value="help"/>
	<property name="lib.dir" value="libs"/>
	<property name="hibernatelib.dir" value="hibernate_libs"/>
	<property name="embedded_libs.dir" value="embedded_libs"/>
	<property name="externallib.dir" value="external_libs"/>
	<property name="ireport.dir" value="iReportLibs"/>
	<property name="system.dep.libs.dir" value="system_dep_libs"/>
	<property name="hibernate.properties" value="hibernate.properties"/>
	<property name="hibernate.cfg" value="hibernate.cfg.xml"/>
	<property name="dir.dest" value="dest"/>
	<property name="hibernate.generated.code.destdir" value="generated-src"/>

	<property name="data.dir" value="data" />
	<property name="wwlib.dir" value="wwlib" />
	
	<!-- Needed for building help search index -->
	<property name ="javahelp-home" value="/home/maureen/lib/jhindexer/jh2.0" />
	<property name ="javahelp-home-mac" value="/Applications/jh2.0" />
	
	<!-- Needed for Packing on the Mac -->
	<property name="packaging" value="packaging" />
	<property name="app.name" value="Specify" />
	<property name="jar.name" value="specify" />
	<property name="dist-mac" value="mac-dist" />
    <property name="mac-icons.dir" value="packaging/icns" />

	<!-- Needed for Packing on the Windows -->
	<property name="dist-win" value="win-dist" />
    <property name="win-icons.dir" value="packaging/ico" />

	<!-- Needed for Packing on the Linux -->
	<property name="dist-linux" value="linux-dist" />

	<!-- Set up the class path for compilation and execution -->
	<path id="project.class.path">
		
		<!-- Include jars in the project library directory -->
		<fileset dir="${hibernatelib.dir}">
			<include name="**/*.jar" />
		</fileset>
		
	    <fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>

		<!-- Include our own classes, of course -->
		<pathelement location="specify.jar"/>
		
		<!-- Include non-mac-application-adapter.jar -->
		<fileset dir="${system.dep.libs.dir}">
			<include name="**/*.jar"/>
		</fileset>
		
		<!-- Include iReport.jar -->
		<fileset dir="${ireport.dir}">
			<include name="**/*.jar"/>
		</fileset>
		
		<!-- Include WorldWind -->
		<fileset dir="${wwlib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<target name="maureen-linux-installer" description="Build the Specify project for Linux and set up directories to run Install4J with packaging/huh-linux.install4j">
		<antcall target="dist-linux-clean"/>
		<antcall target="installer-linux"/>   <!-- depends on installer-base which depends on dist-jar, which depends on dist-compile, which depends on dist-prepare; calls build-help-fulltext-linux, which depends on build-help-index -->
	</target>
	
	<target name="maureen-win-installer" description="Build the Specify project for Windows and set up directories to run Install4J with packaging/huh-windows.install4j">
		<antcall target="dist-win-clean"/>
		<antcall target="installer-win"/>   <!-- depends on installer-base which depends on dist-jar, which depends on dist-compile, which depends on dist-prepare; calls build-help-fulltext-linux, which depends on build-help-index -->
	</target>
			
	<target name="maureen-mac-installer" description="Build the Specify project for Mac and set up directories to run Install4J with packaging/huh-mac.install4j">
		<antcall target="dist-mac-clean"/>
		<antcall target="installer-mac"/>   <!-- depends on installer-base which depends on dist-jar, which depends on dist-compile, which depends on dist-prepare; calls build-help-fulltext-linux, which depends on build-help-index -->
	</target>
		
	<!-- Prepare for Windows and Linux Compile -->
	<target name="dist-prepare" description="Creates compile directories and copies properties files and java source to them from source tree">
		
		<mkdir dir="${compile.dst.root}" />
		<mkdir dir="${compile.src.root}" />
		
		<copy todir="${compile.src.root}">
			<fileset dir="${source.root}">
				<include name="**/*.properties" />
				<include name="**/*.java" />
				<include name="**/*.xml"/>
				<exclude name="${asa.dir}/**"/>
				<exclude name="${asa2specify.dir}/**"/>
				<exclude name="${huh.utilapps.dir}/**"/>
				<exclude name="${huh.config.init.dir}/**"/>
			</fileset>
		</copy>
		
	</target>

	<!-- Prepare for Mac Compile -->
	<target name="dist-prepare-mac" description="Creates compile directories and copies properties and java source to them, with special handling for Mac">
		
		<mkdir dir="${compile.dst.root}" />
		<mkdir dir="${compile.src.root}" />
		
		<copy todir="${compile.src.root}">
			<fileset dir="${source.root}">
				<include name="**/*.properties" />
				<exclude name="**/AttachmentUtils.java" />
				<include name="**/*.java" />
			</fileset>
		</copy>
		
	</target>

	<!-- Compile the java source of the project Windows, Mac and Linux -->
	<target name="dist-compile" depends="dist-prepare" description="Compiles all java classes in compile directories">
		
		<javac srcdir="${compile.src.root}" destdir="${compile.dst.root}" debug="on" optimize="off" deprecation="on" fork="true" memoryInitialSize="256m" memoryMaximumSize="512m">
			<classpath refid="project.class.path" />
		</javac>
		
	</target>
	
	<!-- Jar up compiled classes-->
	<target name="dist-jar" depends="dist-compile" description="Creates specify.jar; copies it to webapp and upwebapp">
		
		<copy todir="${compile.dst.root}">
			<fileset dir="${source.root}">
				<include name="**/*.properties"/>
				<include name="**/*.xml"/>
			</fileset>
		</copy>

		<copy todir="${compile.dst.root}/${rel.images.path}">
			<fileset dir="${source.root}/${rel.images.path}"/>
		</copy>
			
		<jar destfile="${jar.name}.jar">
			<fileset dir="${class.root}">
				<include name="**/*.class" />
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/images/**/*.*" />
			</fileset>
		</jar>
        <copy file="${jar.name}.jar" todir="webapp/WEB-INF/lib" />
        <copy file="${jar.name}.jar" todir="upwebapp/WEB-INF/lib" />
	</target>
	
	<target name="installer-linux" depends="installer-base" description="calls build-help-fulltext-linux">
	    <antcall target="build-help-fulltext-linux"/>
	    
	    <copy file="${source.root}/${rel.images.path}/specify16.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/specify32.png" todir="${installer.dir}/images"/>
		
		<copy file="${source.root}/${rel.images.path}/spireport32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spireport16.png" todir="${installer.dir}/images" />

		<copy file="${source.root}/${rel.images.path}/spbackup32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spbackup16.png" todir="${installer.dir}/images"/>

		<copy file="${source.root}/${rel.images.path}/spwizard32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spwizard16.png" todir="${installer.dir}/images"/>

		<copy file="${source.root}/${rel.images.path}/spbuilder32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spbuilder16.png" todir="${installer.dir}/images"/>

		<copy file="${source.root}/${rel.images.path}/spstatistics32x32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spstatistics16x16.png" todir="${installer.dir}/images"/>	
		
		<copy file="${source.root}/${rel.images.path}/data_split32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/data_split16.png" todir="${installer.dir}/images"/>
    </target>
	
	<target name="installer-win" depends="installer-base" description="calls build-help-fulltext-win">
	    <antcall target="build-help-fulltext-win"/>
	    
	    <copy file="${source.root}/${rel.images.path}/specify16.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/specify32.png" todir="${installer.dir}/images"/>
		
		<copy file="${source.root}/${rel.images.path}/spireport32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spireport16.png" todir="${installer.dir}/images" />

		<copy file="${source.root}/${rel.images.path}/spbackup32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spbackup16.png" todir="${installer.dir}/images"/>

		<copy file="${source.root}/${rel.images.path}/spwizard32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spwizard16.png" todir="${installer.dir}/images"/>

		<copy file="${source.root}/${rel.images.path}/spbuilder32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spbuilder16.png" todir="${installer.dir}/images"/>

		<copy file="${source.root}/${rel.images.path}/spstatistics32x32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spstatistics16x16.png" todir="${installer.dir}/images"/>	
		
		<copy file="${source.root}/${rel.images.path}/data_split32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/data_split16.png" todir="${installer.dir}/images"/>	
    </target>
		
	<target name="installer-mac" depends="installer-base" description="Calls installer-base; you must build on Mac">
	    <antcall target="build-help-fulltext-mac"/>
	    
	    <copy file="${source.root}/${rel.images.path}/specify16.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/specify32.png" todir="${installer.dir}/images"/>
		
		<copy file="${source.root}/${rel.images.path}/spireport32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spireport16.png" todir="${installer.dir}/images" />

		<copy file="${source.root}/${rel.images.path}/spbackup32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spbackup16.png" todir="${installer.dir}/images"/>

		<copy file="${source.root}/${rel.images.path}/spwizard32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spwizard16.png" todir="${installer.dir}/images"/>

		<copy file="${source.root}/${rel.images.path}/spbuilder32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spbuilder16.png" todir="${installer.dir}/images"/>

		<copy file="${source.root}/${rel.images.path}/spstatistics32x32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/spstatistics16x16.png" todir="${installer.dir}/images"/>	
		
		<copy file="${source.root}/${rel.images.path}/data_split32.png" todir="${installer.dir}/images"/>
		<copy file="${source.root}/${rel.images.path}/data_split16.png" todir="${installer.dir}/images"/>
    </target>
	
	<target name="installer-base" depends="dist-jar" description="Creates installer dir, copies files to installer dir">
		
		<mkdir dir="${installer.dir}" />
		
		<copy todir="${installer.dir}/${config.dir}">
			<fileset dir="${config.dir}">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
        <copy todir="${installer.dir}/${hibernatelib.dir}">
			<fileset dir="${hibernatelib.dir}">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
        <copy todir="${installer.dir}/${ireport.dir}">
			<fileset dir="${ireport.dir}">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
        <copy todir="${installer.dir}/${lib.dir}">
			<fileset dir="${lib.dir}">
                <exclude name="**/*.svn" />
                <exclude name="**/derby.jar" />
			</fileset>
		</copy>
		<copy todir="${installer.dir}/${system.dep.libs.dir}">
			<fileset dir="${system.dep.libs.dir}">
				<exclude name="**/*.svn"/>
			</fileset>
		</copy>
		<copy todir="${installer.dir}/${wwlib.dir}">
			<fileset dir="${wwlib.dir}">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>	
        <copy todir="${installer.dir}/${embedded_libs.dir}">
			<fileset dir="${embedded_libs.dir}">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
		
		<!-- Copy Help -->
		<copy todir="${installer.dir}/${help.dir}">
			<fileset dir="${help.dir}">
				<include name="**/*" />
				<exclude name="**/.svn" />
				<exclude name="**/*.psd" />
			</fileset>
		</copy>
		
		<copy file="${jar.name}.jar" todir="${installer.dir}" />
		
		<!-- LINUX icons
		<copy file="${source.root}/${rel.images.path}/specify16.png" todir="${installer.dir}/images" />
		<copy file="${source.root}/${rel.images.path}/specify32.png" todir="${installer.dir}/images" />
		
		<copy file="${source.root}/${rel.images.path}/spireport32.png" todir="${installer.dir}/images" />
		<copy file="${source.root}/${rel.images.path}/spireport16.png" todir="${installer.dir}/images" />

		<copy file="${source.root}/${rel.images.path}/spbackup32.png" todir="${installer.dir}/images" />
		<copy file="${source.root}/${rel.images.path}/spbackup16.png" todir="${installer.dir}/images" />

		<copy file="${source.root}/${rel.images.path}/spwizard32.png" todir="${installer.dir}/images" />
		<copy file="${source.root}/${rel.images.path}/spwizard16.png" todir="${installer.dir}/images" />

		<copy file="${source.root}/${rel.images.path}/spbuilder32.png" todir="${installer.dir}/images" />
		<copy file="${source.root}/${rel.images.path}/spbuilder16.png" todir="${installer.dir}/images" />

		<copy file="${source.root}/${rel.images.path}/spstatistics32x32.png" todir="${installer.dir}/images" />
		<copy file="${source.root}/${rel.images.path}/spstatistics16x16.png" todir="${installer.dir}/images" />	
		
		<copy file="${source.root}/${rel.images.path}/data_split32.png" todir="${installer.dir}/images" />
		<copy file="${source.root}/${rel.images.path}/data_split16.png" todir="${installer.dir}/images" />
		
		WINDOWS icons
		<copy file="${win-icons.dir}/specify128.ico" todir="${installer.dir}/images" />
		<copy file="${win-icons.dir}/spbackup128.ico" todir="${installer.dir}/images" />
		<copy file="${win-icons.dir}/spbuilder128.ico" todir="${installer.dir}/images" />
		<copy file="${win-icons.dir}/spireport128.ico" todir="${installer.dir}/images" />
		<copy file="${win-icons.dir}/spstatistics128.ico" todir="${installer.dir}/images" />
		<copy file="${win-icons.dir}/spwizard128.ico" todir="${installer.dir}/images" />
		<copy file="${win-icons.dir}/data_split.ico" todir="${installer.dir}/images" />				
		
		MAC OS X icons
		<copy file="${mac-icons.dir}/specify.icns" todir="${installer.dir}/images" />
		<copy file="${mac-icons.dir}/spwizard.icns" todir="${installer.dir}/images" />
		<copy file="${mac-icons.dir}/images/backuprestore.icns" todir="${installer.dir}/images" />
		<copy file="${mac-icons.dir}/images/spireports.icns" todir="${installer.dir}/images" />
		<copy file="${mac-icons.dir}/images/spbuilder.icns" todir="${installer.dir}/images" />
		<copy file="${mac-icons.dir}/images/statistics.icns" todir="${installer.dir}/images" />
		<copy file="${mac-icons.dir}/images/data_split.icns" todir="${installer.dir}/images" />
		-->
		
		<copy file="packaging/readme.html" todir="${installer.dir}" />
		<copy file="packaging/license_agreement.html" todir="${installer.dir}" />
		<copy file="./packaging/SpecifyBigSplashBordered.png" todir="${installer.dir}" />
		<move file="${installer.dir}/SpecifyBigSplashBordered.png" tofile="${installer.dir}/SpecifyBigSplash.png"/>

     <!--  
     	<copy file="./demo_files/Stratigraphy.csv" todir="${installer.dir}/config" />
        <copy file="./demo_files/Stratigraphy.csv" todir="${installer.dir}/config" /> -->
		<copy file="./demo_files/topbrc4.jpg" todir="${installer.dir}/demo_files" />
        <copy file="./demo_files/topbrc195x68.png" todir="${installer.dir}/demo_files" />
        <copy file="./demo_files/chronostrat_tree.xls" todir="${installer.dir}/demo_files" />
		
		<!-- Copy of Wizard Taxon Information -->
		<copy todir="${installer.dir}/demo_files/taxonomy">
			<fileset dir="demo_files/taxonomy">
				<include name="**/*" />
			</fileset>
		</copy>
		
	</target>
	
	<target name="installer-updater" depends="" description="deletes UpdaterInstall dir, calls dist-jar, copies files to UpdaterInstall dir">
		
		<delete dir="UpdaterInstall"/>
		<mkdir dir="UpdaterInstall" />
		
		<antcall target="dist-jar"/>
		
        <copy todir="UpdaterInstall/libs">
			<fileset dir="libs">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
		<copy file="${jar.name}.jar" todir="UpdaterInstall" />
    </target>
	

		
	<!-- *************************************************************
	     Mac Common Components Build
	     ************************************************************* -->
	<target name="dist-mac-common" depends="" description="makes mac dirs, calls build-help-index and build-help-fulltext-mac">
		
		<mkdir dir="${dist-mac}"/>
		<mkdir dir="${installer.dir}/Contents/MacOS"/>
		<mkdir dir="${installer.dir}/Contents/Resources/Java/src"/>
		<mkdir dir="${installer.dir}/Contents/Resources/Java/config"/>
		<mkdir dir="${installer.dir}/Contents/Resources/Java/demo_files"/>
		<mkdir dir="${installer.dir}/Contents/Resources/Java/system_dep_libs"/>
		<mkdir dir="${installer.dir}/Contents/Resources/Java/system_dep_libs/mac"/>
		
		<!-- Copy Application Stub Compile the java source of the project -->
		<copy file="${packaging}/JavaApplicationStub" todir="${installer.dir}/Contents/MacOS" />
		<exec executable="chmod">
			<arg value="755"/>
			<arg value="${installer.dir}/Contents/MacOS/JavaApplicationStub"/>
		</exec>

		<!-- Copy config dir -->
		<copy todir="${installer.dir}/Contents/Resources/Java/config">
			<fileset dir="config">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
		
		<!-- Copy the main app jar -->
		<copy file="${jar.name}.jar" todir="${installer.dir}/Contents/Resources/Java" />

		<!-- Copy Icons -->
		<copy file="${packaging}/specify.icns" todir="${installer.dir}/Contents/Resources" />

		<!-- Libraries / Jars -->
		<copy todir="${installer.dir}/Contents/Resources/Java">
			<fileset dir="libs">
				<include name="*.jar" />
				<exclude name="**/json-lib.jar" />
				<exclude name="**/ezmorph.jar" />
			</fileset>
			<fileset dir="${hibernatelib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${ireport.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<!-- Tell OS the dir is an App -->
		<!-- <exec command="/Developer/Tools/SetFile -a B ${installer.dir}" /> -->

		<!-- Copy Help -->
		<copy todir="${installer.dir}/Contents/Resources/Java/help">
			<fileset dir="help">
				<exclude name="**/.svn" />
				<exclude name="**/*.psd" />
			</fileset>
		</copy>

    </target>
	
	<!-- *************************************************************
	     Mac Distribution for the iReports4Specify
	     ************************************************************* -->
	<target name="dist-mac-irep" depends="" description="deletes iReports4Specify.app, calls clean-jar, dist-jar, dist-mac-common, copies iReport files to appdir">
		
		<property name="appdir" value="${dist-mac}/iReports4Specify.app" />
		<property name="derby.data.path" value="${dist-mac}" />
	
		<delete dir="${dist-mac}/iReports4Specify.app"/>
		
		<antcall target="dist-jar"/>
		<antcall target="dist-mac-common"/>
		
		<!-- Copy and Rename Info List -->
		<copy file="${packaging}/ireports/Info.plist" todir="${appdir}/Contents" />
		
		<!-- Copy and Rename PkgInfo -->
		<copy file="${packaging}/ireports/PkgInfo" todir="${appdir}/Contents" />
		
		<!-- Copy Icons -->
		<copy file="${packaging}/ireports/ireports.icns" todir="${appdir}/Contents/Resources" />
		<delete file="${appdir}/Contents/Resources/specify.icns"/>	
		
		<!-- 
		<delete file="${appdir}/Contents/Resources/Java/iReport.jar"/>
		
		<rename src="${appdir}/Contents/Resources/Java/iReportMac.jar" dest="${appdir}/Contents/Resources/Java/iReport.jar"/>
		-->	
		<!-- <rename src="${appdir}/Contents/Resources/ireports.icns" dest="${appdir}/Contents/Resources/specifybldr.icns"/> -->
		<!-- <rename src="${appdir}/Contents/Resources/specify.icns" dest="${appdir}/Contents/Resources/specifybldr.icns"/> -->
		
	</target>
	
		
	<!-- *************************************************************
	     Mac Distribution for the Builder
	     ************************************************************* -->
	<target name="dist-mac-bld" depends="" description="calls clean-jar, dist-jar, dist-mac-common, copies files to appdir">
		
		<property name="appdir" value="${dist-mac}/SpecifyBuilder.app" />
		<property name="derby.data.path" value="${dist-mac}" />
		
		<antcall target="dist-jar"/>
		<antcall target="dist-mac-common"/>
		
		<!-- Copy and Rename Info List -->
		<copy file="${packaging}/builder/Info.plist" todir="${appdir}/Contents" />
		
		<!-- Copy and Rename PkgInfo -->
		<copy file="${packaging}/builder/PkgInfo" todir="${appdir}/Contents" />
		
		<!-- Copy Icons -->
		<!-- <copy file="${packaging}/builder/specifybldr.icns" todir="${appdir}/Contents/Resources" /> -->
		<rename src="${appdir}/Contents/Resources/specify.icns" dest="${appdir}/Contents/Resources/specifybldr.icns"/>
		
		<!-- Copy Stratigraphy.csv -->
		<copy file="demo_files/Stratigraphy.csv" todir="${appdir}/Contents/Resources/Java/config" />

	</target>

	<!-- *************************************************************
	    Mac Distribution (Main Specify Application)
	    ************************************************************* -->
	<target name="dist-mac" depends="" description="calls clean-jar, dist-jar, dist-mac-common, copies files to appdir, copies demo files to dist dir">
		
		<!--<property name="appdir" value="${dist-mac}/${app.name}.app" /> -->
		<property name="derby.data.path" value="${dist-mac}" />

		<antcall target="dist-mac-common"/>

		<!-- Copy info list -->
		<copy file="${packaging}/Info.plist" todir="${install.dir}/Contents" />

		<!-- Copy PkgInfo -->
		<copy file="${packaging}/PkgInfo" todir="${install.dir}/Contents" />

		<!-- Copy demo_files dir -->
		<!--<copy todir="${appdir}/Contents/Resources/Java/demo_files">
			<fileset dir="demo_files">
				<exclude name="**/.svn" />
				<exclude name="**/.csv" />
				<exclude name="**/.jrxml" />
				<include name="**/topbrc195x68.png" />
			</fileset>
		</copy> -->
		
		<!-- Testing Alt Help 
		<property name="alt.help.img.dir" value="AltHelpImages/Windows"/>
		<antcall target="copy-alt-help-images"/> -->

		<!-- Demo Files -->
		<copy file="demo_files/workbench/FishCollectingTrip.csv" todir="${dist-mac}/examples" />
		<copy file="demo_files/workbench/JohsonCountyTrip.csv" todir="${dist-mac}/examples" />
	    <copy file="demo_files/workbench/SaipanTrip.xls" todir="${dist-mac}/examples" />
	    <copy file="demo_files/Reports/ImportExample.jrxml" todir="${dist-mac}/examples" />
		
	</target>
	
	
	<!-- *************************************************************
	     Mac Schema Localizer Application Build
	     ************************************************************* -->
	<target name="dist-mac-sl" depends="" description="calls clean-jar, dist-jar, dist-mac-common, coppies files to appdir">
		
		<property name="appdir" value="${dist-mac}/SpecifySchema.app" />
		<property name="derby.data.path" value="${dist-mac}/DerbyDatabases" />
		
		<antcall target="dist-jar"/>
		<antcall target="dist-mac-common"/>
		
		<!-- Copy and Rename Info List -->
		<copy file="${packaging}/schemaloc/Info.plist" todir="${appdir}/Contents" />
		
		<!-- Copy and Rename PkgInfo -->
		<copy file="${packaging}/schemaloc/PkgInfo" todir="${appdir}/Contents" />
		
	</target>
	
	<!-- *************************************************************
	     Mac SpecifyDBInit Application Build
	     ************************************************************* -->
	<target name="dist-mac-db-init" depends="" description="calls clean-jar, dist-jar, dist-mac-common, copies files to appdir">
		
		<property name="appdir" value="${dist-mac}/SpecifyDBInit.app" />
		<property name="derby.data.path" value="${dist-mac}/DerbyDatabases" />
		
		<antcall target="dist-jar"/>
		<antcall target="dist-mac-common"/>
		
		<!-- Copy and Rename Info List -->
		<copy file="${packaging}/specifydbinit/Info.plist" todir="${appdir}/Contents" />
		
		<!-- Copy and Rename PkgInfo -->
		<copy file="${packaging}/specifydbinit/PkgInfo" todir="${appdir}/Contents" />
		
	</target>
	

	<!-- *************************************************************
	     Mac Builds All the Mac Applications
	     ************************************************************* -->
	<target name="dist-mac-all" depends="" description="calls dist-mac, dist-mac-sl, dist-mac-bld, dist-mac-db-init, dist-mac-irep">
		<antcall target="dist-mac"/>
		<antcall target="dist-mac-sl"/>
		<antcall target="dist-mac-bld"/>
		<antcall target="dist-mac-db-init"/>
		<antcall target="dist-mac-irep"/>
	</target>
	
	<!-- *************************************************************
	    Mac Distribution OLD (Main Specify Application)
	    ************************************************************* -->
	<target name="dist-mac-old" depends="" description="calls clean-jar, dist-jar, dist-mac-clean, build-empty-derby-db, makes appdir/dist dir, copies files, executes mac developer command, calls build-help-index, build-help-fulltext-mac">
		
		<property name="appdir" value="${dist-mac}/${app.name}.app" />
		<property name="derby.data.path" value="${dist-mac}" />
		
		<antcall target="dist-jar"/>
		<antcall target="dist-mac-clean"/>
		
		<antcall target="build-empty-derby-db"/>
				
		<mkdir dir="${dist-mac}" />
		<mkdir dir="${appdir}" />
		<mkdir dir="${appdir}/Contents" />
		<mkdir dir="${appdir}/Contents/MacOS" />
		<mkdir dir="${appdir}/Contents/Resources" />
		<mkdir dir="${appdir}/Contents/Resources/Java" />
		<mkdir dir="${appdir}/Contents/Resources/Java/config" />
		<mkdir dir="${appdir}/Contents/Resources/Java/demo_files" />

		<!-- Copy Application Stub Compile the java source of the project -->
		<copy file="${packaging}/JavaApplicationStub" todir="${appdir}/Contents/MacOS" />
		<exec command="chmod 755 ${appdir}/Contents/MacOS/JavaApplicationStub" />

		<!-- Copy info list -->
		<copy file="${packaging}/Info.plist" todir="${appdir}/Contents" />

		<!-- Copy PkgInfo -->
		<copy file="${packaging}/PkgInfo" todir="${appdir}/Contents" />

		<!-- Copy demo_files dir -->
		<copy todir="${appdir}/Contents/Resources/Java/demo_files">
			<fileset dir="demo_files">
				<exclude name="**/.svn" />
				<exclude name="**/.csv" />
				<exclude name="**/.jrxml" />
				<include name="**/topbrc195x68.png" />
			</fileset>
		</copy>
		
		<!-- Copy config dir -->
		<copy todir="${appdir}/Contents/Resources/Java/config">
			<fileset dir="config">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
		
		<!-- Copy the main app jar -->
		<copy file="${jar.name}.jar" todir="${appdir}/Contents/Resources/Java" />

		<!-- Copy Icons -->
		<copy file="${packaging}/specify.icns" todir="${appdir}/Contents/Resources" />

		<copy todir="${appdir}/Contents/Resources/Java">
			<fileset dir="libs">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${hibernatelib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${ireport.dir}">
				<include name="iReport.jar" />
			</fileset>
		</copy>

		<!-- Tell OS the dir is an App -->
		<exec command="/Developer/Tools/SetFile -a B ${appdir}" />
		

		<!-- Copy Help -->
		<copy todir="${appdir}/Contents/Resources/Java/help">
			<fileset dir="help">
				<exclude name="**/.svn" />
			</fileset>
		</copy>
		
		<antcall target="build-help-index"/>
		<antcall target="build-help-fulltext-mac"/>
		
		<!-- Testing Alt Help 
		<property name="alt.help.img.dir" value="AltHelpImages/Windows"/>
		<antcall target="copy-alt-help-images"/> -->

		<!-- Demo Files -->
		<copy file="demo_files/workbench/FishCollectingTrip.csv" todir="${dist-mac}/examples" />
		<copy file="demo_files/workbench/JohsonCountyTrip.csv" todir="${dist-mac}/examples" />
	    <copy file="demo_files/workbench/SaipanTrip.xls" todir="${dist-mac}/examples" />
		<copy file="demo_files/Reports/ImportExample.jrxml" todir="${dist-mac}/examples" />
	</target>

		
	<!-- *************************************************************
	     Mac WorkBench Application Build
	     ************************************************************* -->
	<target name="dist-mac-wb" depends="" description="calls clean-jar, dist-jar, dist-mac-clean, makes dirs, copies files, executes mac developer command">
		
		<property name="appdir" value="${dist-mac}/${app.name}.app" />
		<property name="derby.data.path" value="${dist-mac}/DerbyDatabases" />
		
		<antcall target="dist-jar"/>
		<antcall target="dist-mac-clean"/>
		
		<!--
		<antcall target="build-empty-derby-db"/>
		-->
		<mkdir dir="${dist-mac}" />
		<mkdir dir="${appdir}" />
		<mkdir dir="${appdir}/Contents" />
		<mkdir dir="${appdir}/Contents/MacOS" />
		<mkdir dir="${appdir}/Contents/Resources" />
		<mkdir dir="${appdir}/Contents/Resources/Java" />
		<mkdir dir="${appdir}/Contents/Resources/Java/config" />

		<!-- Copy Application Stub Compile the java source of the project -->
		<copy file="${packaging}/JavaApplicationStub" todir="${appdir}/Contents/MacOS" />
		<exec command="chmod 755 ${appdir}/Contents/MacOS/JavaApplicationStub" />

		<!-- Copy info list -->
		<copy file="${packaging}/WBInfo.plist" todir="${appdir}/Contents" />
		<rename src="${appdir}/Contents/WBInfo.plist" dest="${appdir}/Contents/Info.plist"/>
		
		<!-- Copy PkgInfo -->
		<copy file="${packaging}/PkgInfo" todir="${appdir}/Contents" />

		<!-- Copy config dir -->
		<copy todir="${appdir}/Contents/Resources/Java/config">
			<fileset dir="config">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
		
		<!-- Copy the main app jar -->
		<copy file="${jar.name}.jar" todir="${appdir}/Contents/Resources/Java" />

		<!-- Copy Icons -->
		<copy file="${packaging}/specify.icns" todir="${appdir}/Contents/Resources" />

		<copy todir="${appdir}/Contents/Resources/Java">
			<fileset dir="libs">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${hibernatelib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${ireport.dir}">
				<include name="iReport.jar" />
			</fileset>
		</copy>

		<!-- Tell OS the dir is an App -->
		<exec command="/Developer/Tools/SetFile -a B ${appdir}" />
		

		<!-- Copy Help -->
		<copy todir="${appdir}/Contents/Resources/Java/help">
			<fileset dir="help">
				<exclude name="**/.svn" />
			</fileset>
		</copy>

		<!-- Demo Files -->
		<copy file="demo_files/workbench/FishCollectingTrip.csv" todir="${dist-mac}/examples" />
		<copy file="demo_files/workbench/JohsonCountyTrip.csv" todir="${dist-mac}/examples" />
	    <copy file="demo_files/workbench/SaipanTrip.xls" todir="${dist-mac}/examples" />

	</target>

	<!-- *************************************************************
	     Mac Schema Localizer Application Build
	     ************************************************************* -->
	<target name="dist-mac-sl-old" depends="" description="calls clean-jar, dist-jar, dist-mac-clean, makes dirs, copies files, executes mac developer command">
		
		<property name="appdir" value="${dist-mac}/SpecifySchema.app" />
		<property name="derby.data.path" value="${dist-mac}/DerbyDatabases" />
		
		<antcall target="dist-jar"/>
		<antcall target="dist-mac-clean"/>
		
		<!--
		<antcall target="build-empty-derby-db"/>
		-->
		<mkdir dir="${dist-mac}" />
		<mkdir dir="${appdir}" />
		<mkdir dir="${appdir}/Contents" />
		<mkdir dir="${appdir}/Contents/MacOS" />
		<mkdir dir="${appdir}/Contents/Resources" />
		<mkdir dir="${appdir}/Contents/Resources/Java" />
		<mkdir dir="${appdir}/Contents/Resources/Java/config" />

		<!-- Copy Application Stub Compile the java source of the project -->
		<copy file="${packaging}/JavaApplicationStub" todir="${appdir}/Contents/MacOS" />
		<exec command="chmod 755 ${appdir}/Contents/MacOS/JavaApplicationStub" />

		<!-- Copy info list -->
		<copy file="${packaging}/SLInfo.plist" todir="${appdir}/Contents" />
		<rename src="${appdir}/Contents/SLInfo.plist" dest="${appdir}/Contents/Info.plist"/>
		
		<!-- Copy PkgInfo -->
		<copy file="${packaging}/PkgInfo" todir="${appdir}/Contents" />

		<!-- Copy config dir -->
		<copy todir="${appdir}/Contents/Resources/Java/config">
			<fileset dir="config">
				<exclude name="**/*.svn" />
				<exclude name="**/fish/*" />
				<exclude name="**/birds/*" />
				<exclude name="**/backstop/*" />
				<exclude name="**/accessions/*" />
				<exclude name="**/insect/*" />
			</fileset>
		</copy>
		
		<!-- Copy the main app jar -->
		<copy file="${jar.name}.jar" todir="${appdir}/Contents/Resources/Java" />

		<!-- Copy Icons -->
		<copy file="${packaging}/specify.icns" todir="${appdir}/Contents/Resources" />

		<copy todir="${appdir}/Contents/Resources/Java">
			<fileset dir="libs">
				<include name="*.jar" />
				<exclude name="**/*.svn" />
				<exclude name="**/ant.jar" />
				<exclude name="**/derby.jar" />
				<exclude name="**/jasperreports.jar" />
				<exclude name="**/itext.jar" />
				<exclude name="**/jfreechart.jar" />
			</fileset>
			<fileset dir="${hibernatelib.dir}">
				<include name="**/dom4j.jar" />
				<exclude name="**/*.svn" />
			</fileset>
		</copy>

		<!-- Tell OS the dir is an App -->
		<exec command="/Developer/Tools/SetFile -a B ${appdir}" />
		
	</target>

	<!-- *************************************************************
	     Schema Export (Doesn't work at the moment)
	     ************************************************************* -->
	<target name="schemaexport" description="Generates the database schema with hbm2ddl to a file" depends="">
			<taskdef name="schemaexport" classname="org.hibernate.tool.hbm2ddl.SchemaExportTask">
				<classpath refid="project.class.path" />
				</taskdef>
				<!-- Use the Hibernate configuration from source directory. -->
				 <schemaexport 
				
				     config="src/hibernate.cfg.xml"
				     quiet="yes"
				     text="no"
				     drop="no" 
				     delimiter=";"
			         output="${build.dir}/schema-export.sql"/>
	</target>
	<!-- *************************************************************
	     Build Empty Derby DB
	     ************************************************************* -->
	<target name="build-empty-derby-db" description="calls BuildSampleDatabase (derby)">
		<!--
		<property name="current.classpath" refid="project.class.path"/>
		<echo level="info">
		   Classpath is :
		      ${current.classpath}
		   </echo>
		-->
		
		<java classname="edu.ku.brc.specify.tests.BuildSampleDatabase" fork="true">
		    <classpath refid="project.class.path" />
			<arg value="build_empty"/>
			<arg value="${derby.data.path}"/>
		</java>
	</target>
		
	<!-- *************************************************************
	     Build Help Index
	     ************************************************************* -->
	<target name="build-help-index" depends="" description="calls edu.ku.brc.util.HelpIndexer">		
		<java classname="edu.ku.brc.util.HelpIndexer" fork="true">
		    <classpath refid="project.class.path"/>
			<arg value="${installer.dir}/help/SpecifyHelp.jhm"/>      <!-- map file    -->
			<arg value="${installer.dir}/help/SpecifyHelp"/>          <!-- help dir    -->
			<arg value="${installer.dir}/help/SpecifyHelpIndex.xml"/> <!-- output file -->
		</java>
	</target>
	
	<!-- *************************************************************
	     Build Help FullText Index
	     ************************************************************* -->

	<target name="build-help-fulltext-linux" depends="build-help-index" description="runs javahelp/bin/jhindexer.jar on linux-distSearchConfig.txt, deletes same file after">
	  	<java jar="${javahelp-home}/javahelp/bin/jhindexer.jar" fork="true" dir="${installer.dir}/${help.dir}">
	  		<!-- if definitions for dist-linux,dist-mac, or dist-win change then
	  			 contents of xxxSearchConfig.txt files will need to be changed accordingly -->
	  		<arg value="-c" />
	  		<arg value="${dist-linux}SearchConfig.txt"/>
	  		<arg value="-db" />
	  		<arg value="SpecifyHelpSearchIndex"/>
	    	<arg value="SpecifyHelp"/>
	 	</java>
		
		<delete file="${installer.dir}/${help.dir}/${dist-linux}SearchConfig.txt"/>	
	</target>
	
	<target name="build-help-fulltext-mac" depends="build-help-index" description="runs javahelp/bin/jhindexer.jar on mac-distSearchConfig.txt, deletes same file after">
	  <java jar="${javahelp-home}/javahelp/bin/jhindexer.jar" fork="true" dir="${installer.dir}/${help.dir}">
	  		<!-- if definitions for dist-linux,dist-mac, or dist-win change then
	  			 contents of xxxSearchConfig.txt files will need to be changed accordingly -->
	 	 	<arg value="-c" />
	 	 	<arg value="${dist-mac}SearchConfig.txt"/>
	 	 	<arg value="-db" />
	 	 	<arg value="SpecifyHelpSearchIndex"/>
		    <arg value="SpecifyHelp"/>
	  	</java>
		
		<delete file="${appdir}/help/${dist-mac}SearchConfig.txt"/>	
	</target>
	
	<target name="build-help-fulltext-win" depends="build-help-index" description="runs javahelp/bin/jhindexer.jar on win-distSearchConfig.txt, deletes same file after">
	  	<java jar="${javahelp-home}/javahelp/bin/jhindexer.jar" fork="true" dir="${installer.dir}/${help.dir}">
	  		<!-- if definitions for dist-linux,dist-mac, or dist-win change then
	  			contents of xxxSearchConfig.txt files will need to be changed accordingly -->
	  			<arg value="-c" />
	  			<arg value="${dist-win}SearchConfig.txt"/>
	  			<arg value="-db" />
	  			<arg value="SpecifyHelpSearchIndex"/>
	  		  <arg value="SpecifyHelp"/>
	 	 </java>
		<delete file="${installer.dir}/${help.dir}/${dist-win}SearchConfig.txt"/>
	</target>
	
	<!-- *************************************************************
	     Common files between Windows and Linux
	     ************************************************************* -->
	<target name="basic-non-mac-dist" description="copies files to appdir/classes,demo_files,libs,help">

		<mkdir dir="${appdir}/classes" />
		<copy file="${source.root}/log4j.properties" todir="${appdir}/classes/." />
		
		<!-- Copy config dir -->
		<copy todir="${appdir}/config">
			<fileset dir="config">
				<exclude name="**/.svn" />
				<exclude name="**/.csv" />
			</fileset>
		</copy>
		
		<!-- Copy demo_files dir -->
		<copy todir="${appdir}/demo_files">
			<fileset dir="demo_files">
				<exclude name="**/.svn" />
				<exclude name="**/.csv" />
				<exclude name="**/.jrxml" />
				<include name="**/topbrc195x68.png" />
				<include name="**/Stratigraphy.csv" />
			</fileset>
		</copy>
		
		<!-- Copy the main app jar -->
		<copy file="${jar.name}.jar" todir="${appdir}/libs" />

		<copy todir="${appdir}/libs">
			<fileset dir="libs">
				<include name="*.jar" />
				<exclude name="**/json-lib.jar" />
				<exclude name="**/ezmorph.jar" />
			</fileset>
			<fileset dir="${hibernatelib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${ireport.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${system.dep.libs.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<!-- Copy Help -->
		<copy todir="${appdir}/help">
			<fileset dir="help">
				<exclude name="**/.svn" />
			</fileset>
		</copy>

	</target>

	<!-- *************************************************************
	     Windows Distribution
	     ************************************************************* -->
	
	<target name="dist-win-update" description="calls clean-jar, dist-jar, basic-non-mac-dist, copy-alt-help-images">
		<property name="appdir" value="${dist-win}/Specify" />
		<property name="derby.data.path" value="${dist-win}/DerbyDatabases" />

		<antcall target="dist-jar"/>
		<antcall target="basic-non-mac-dist"/>
		<!-- Copy Alt Help Image Files -->
        <property name="alt.help.img.dir" value="AltHelpImages/Windows"/>
        <antcall target="copy-alt-help-images"/>
    </target>
	
	<target name="dist-win" description="calls clean-jar, dist-win-clean, dist-jar, basic-non-mac-dist, build-help-index, build-help-fulltext-win, copy-alt-help-images">
		
		<property name="appdir" value="${dist-win}/Specify" />
		<property name="derby.data.path" value="${dist-win}/DerbyDatabases" />
		
		<antcall target="dist-win-clean"/>
		<antcall target="dist-jar"/>
		
		<mkdir dir="${dist-win}" />
		<mkdir dir="${appdir}/libs" />
		<mkdir dir="${dist-win}/examples" />
		
		<!-- <antcall target="build-empty-derby-db"/> -->
		<antcall target="basic-non-mac-dist"/>

		<antcall target="build-help-index"/>
		<antcall target="build-help-fulltext-win"/>

		<!-- Copy Alt Help Image Files -->
		<property name="alt.help.img.dir" value="AltHelpImages/Windows"/>
	    <antcall target="copy-alt-help-images"/>
		
		<!-- Demo Files -->
		<copy file="demo_files/workbench/FishCollectingTrip.csv" todir="${dist-win}/examples" />
		<copy file="demo_files/workbench/JohsonCountyTrip.csv" todir="${dist-win}/examples" />
	    <copy file="demo_files/workbench/SaipanTrip.xls" todir="${dist-win}/examples" />
		<copy file="demo_files/Reports/ImportExample.jrxml" todir="${dist-win}/examples" />
		
		<!-- This is NOT for the release -->
		<!-- Copy demo_files dir -->
		<copy todir="${appdir}/demo_files">
			<fileset dir="demo_files">
				<exclude name="**/.svn" />
				<exclude name="**/.csv" />
				<exclude name="**/.jrxml" />
				<include name="**/*.jpg" />
			</fileset>
		</copy>

	</target>

	<target name="dist-win-jar" description="calls clean-jar, dist-jar">
		
		<property name="appdir" value="${dist-win}/Specify" />
		<property name="derby.data.path" value="${dist-win}/DerbyDatabases" />
		
		<antcall target="dist-jar"/>
		
		<copy file="${jar.name}.jar" todir="${appdir}/libs" />
		
	</target>

	<!-- *************************************************************
	     Linux Distribution
	     ************************************************************* -->
	<target name="dist-linux" description="dist-linux-clean, dist-jar, build-empty-derby-db, basic-non-mac-dist, build-help-index, build-help-fulltext-linux, copy-alt-help-images">
		
		<property name="appdir" value="${dist-linux}/Specify" />
		<property name="derby.data.path" value="${dist-linux}/DerbyDatabases" />
		
		<antcall target="dist-linux-clean"/>
		
	    <antcall target="dist-jar"/>
		
		
		<mkdir dir="${dist-linux}" />
		<mkdir dir="${appdir}/libs" />

		
		<antcall target="build-empty-derby-db"/>
		
		<antcall target="basic-non-mac-dist"/>
		
		<antcall target="build-help-index"/>
		<antcall target="build-help-fulltext-linux"/>

		<!-- Copy Alt Help Image Files -->
		<property name="alt.help.img.dir" value="AltHelpImages/Windows"/>
	    <antcall target="copy-alt-help-images"/>
				
		
		<!-- Copy info list -->
		<copy file="${packaging}/linux/specify.sh" todir="${dist-linux}/." />
		<chmod file="${dist-linux}/specify.sh" perm="u+rx"/>
		
		<copy file="${packaging}/linux/specifybuilder.sh" todir="${dist-linux}/." />
		<chmod file="${dist-linux}/specifybuilder.sh" perm="u+rx"/>
		
		<copy file="${packaging}/linux/specifydbinit.sh" todir="${dist-linux}/." />
		<chmod file="${dist-linux}/specifydbinit.sh" perm="u+rx"/>
		
		<copy file="${packaging}/linux/specifyschema.sh" todir="${dist-linux}/." />
		<chmod file="${dist-linux}/specifyschema.sh" perm="u+rx"/>

		<copy file="${packaging}/linux/ireportlaunch.sh" todir="${dist-linux}/." />
		<chmod file="${dist-linux}/ireportlaunch" perm="u+rx"/>

		<!-- Demo Files -->
		<copy file="demo_files/workbench/FishCollectingTrip.csv" todir="${dist-linux}/examples" />
		<copy file="demo_files/workbench/JohsonCountyTrip.csv" todir="${dist-linux}/examples" />
	    <copy file="demo_files/workbench/SaipanTrip.xls" todir="${dist-linux}/examples" />
		<copy file="demo_files/Reports/ImportExample.jrxml" todir="${dist-linux}/examples" />
		
	</target>
	
	<!--*************************************************************
	     Copy Alternate Help Images
	    ************************************************************* -->
	<target name="copy-alt-help-images" description="copies files to appdir/help/SpecifyHelp/images">
		
		<!-- <property name="appdir" value="${dist-mac}/${app.name}.app" />
		<property name="alt.help.img.dir" value="AltHelpImages/Windows"/>
		<copy todir="${appdir}/Contents/Resources/Java/help/SpecifyHelp/images" flatten="true" overwrite="true"> -->
		<copy todir="${appdir}/help/SpecifyHelp/images" flatten="true" overwrite="true">
			<fileset dir="${alt.help.img.dir}">
				<exclude name="**/.svn" />
				<include name="**/*.png" />
			</fileset>
		</copy>
		
	</target>



	<!--*************************************************************
	     Clean Distributions
	    ************************************************************* -->
	<target name="dist-base-clean" description="deletes compile src, compile dist, installer, extmedia dirs, specify.jar">
		<delete dir="${compile.src.root}"/>
		<delete dir="${compile.dst.root}"/>
		<delete dir="${installer.dir}"/>
		<delete dir="${media.dir}"/>
		<delete file="${jar.name}.jar"/>
	</target>
	
	<target name="dist-mac-clean" description="deletes dist-mac dir" depends="dist-base-clean">
		<delete dir="${dist-mac}"/>
    </target>
	
	<target name="dist-win-clean" description="deletes dist-win dir" depends="dist-base-clean">
		<delete dir="${dist-win}"/>
    </target>
	
	<target name="dist-linux-clean" description="deletes dist-linux dir" depends="dist-base-clean">
		<delete dir="${dist-linux}"/>
    </target>
	
</project>
